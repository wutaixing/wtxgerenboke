<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wtx.myblog.mapper.ArticleMapper">

    <insert id="saveArticle">
        INSERT INTO article (
            articleId,
            author,
            originalAuthor,
            articleTitle,
            articleContent,
            articleTags,
            articleType,
            articleCategories,
            publishDate,
            updateDate,
            articleUrl,
            articleTabloid,
            likes,
            lastArticleId,
            nextArticleId
        ) VALUES (
                     #{articleId},
                     #{author},
                     #{originalAuthor},
                     #{articleTitle},
                     #{articleContent},
                     #{articleTags},
                     #{articleType},
                     #{articleCategories},
                     #{publishDate},
                     #{updateDate},
                     #{articleUrl},
                     #{articleTabloid},
                     #{likes},
                     #{lastArticleId},
                     #{nextArticleId}
                 )
    </insert>
    <insert id="inserttags">
        insert into tags(tagName,tagSize) values(#{tagName},#{tagSize})
    </insert>

    <delete id="deleteArticle">
        DELETE FROM article WHERE articleId = #{articleId}
    </delete>


    <!-- 查找早于当前文章的最新文章 -->
    <select id="findLatestArticleBefore" resultType="Long">
        SELECT articleId FROM article
        WHERE publishDate &lt; (SELECT publishDate FROM article WHERE articleId = #{currentArticleId})
        ORDER BY publishDate DESC
        LIMIT 1
    </select>

    <!-- 查找晚于当前文章的最早文章 -->
    <select id="findEarliestArticleAfter" resultType="Long">
        SELECT articleId FROM article
        WHERE publishDate &gt; (SELECT publishDate FROM article WHERE articleId = #{currentArticleId})
        ORDER BY publishDate ASC
            LIMIT 1
    </select>

    <select id="getArticleManagement" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article order by id desc
    </select>
    <select id="getArticleById" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article where id = #{id}
    </select>
    <select id="getArticleByIntId" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article where id = #{id}
    </select>
    <select id="getArticleByTitleArticleId" resultType="java.lang.String">
        SELECT articleTitle FROM article where articleId = #{articleId}
    </select>
    <select id="getArticleAuthorByArticleId" resultType="java.lang.String">
        SELECT author FROM article where articleId = #{articleId}
    </select>
    <select id="getArticleByArticleId" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article where articleId = #{articleId}
    </select>
    <select id="getarticleNum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM article
    </select>
    <select id="getArticleLikesByArticleId" resultType="java.lang.Integer">
        SELECT likes FROM article where articleId = #{articleId}
    </select>
    <select id="countarticleNum" resultType="java.lang.Long">
        SELECT COUNT(*) FROM article
    </select>
    <select id="queryLiksByarticleId" resultType="java.lang.Integer">
        SELECT IFNUll(max(likes),0) FROM article where articleId = #{articleId}
    </select>
    <select id="getArticleByArticleCategories" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article where articleCategories = #{articleCategories} order by id desc
    </select>
    <select id="findArticleNumByCategoryName" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM article where articleCategories = #{articleCategories}
    </select>
    <select id="getAllArticleByArticleCategories" resultType="com.wtx.myblog.model.Article">
        SELECT * FROM article order by id  desc
    </select>


    <!-- 更新文章的上下关系 -->
    <update id="updateArticleRelations">
        UPDATE article
        SET lastArticleId = #{lastId}, nextArticleId = #{nextId}
        WHERE articleId = #{currentId}
    </update>
    <!-- 更新上一篇文章的nextArticleId指向当前文章 -->
    <update id="updateLastArticleNextPointer">
        UPDATE article SET nextArticleId = #{currentArticleId} WHERE articleId = #{lastArticleId}
    </update>

    <!-- 更新下一篇文章的lastArticleId指向当前文章 -->
    <update id="updateNextArticleLastPointer">
        UPDATE article SET lastArticleId = #{currentArticleId} WHERE articleId = #{nextArticleId}
    </update>
    <update id="updateLastNextId">
       update article set ${LastOrNextStr} = #{updateId} where articleId = #{articleId}
    </update>
    <update id="updateArticleById">
        UPDATE article
        SET
            articleId = #{articleId},
            author = #{author},
            originalAuthor = #{originalAuthor},
            articleTitle = #{articleTitle},
            articleContent = #{articleContent},
            articleTags = #{articleTags},
            articleType = #{articleType},
            articleCategories = #{articleCategories},
            updateDate = #{updateDate},
            articleUrl = #{articleUrl},
            articleTabloid = #{articleTabloid},
            likes = #{likes},
            lastArticleId = #{lastArticleId},
            nextArticleId = #{nextArticleId}
        WHERE id = #{id}
    </update>

    <!-- 更新文章点赞数 -->
    <update id="updateArticleLikes">
        UPDATE article
        SET likes = #{likes}
        WHERE articleId = #{articleId}
    </update>

    <!-- 增加文章点赞数 -->
    <update id="incrementArticleLikes">
        UPDATE article
        SET likes = likes + 1
        WHERE articleId = #{articleId}
    </update>

    <!-- 减少文章点赞数 -->
    <update id="decrementArticleLikes">
        UPDATE article
        SET likes = CASE 
            WHEN likes > 0 THEN likes - 1 
            ELSE 0 
        END
        WHERE articleId = #{articleId}
    </update>
    <update id="updateLikeByArticleId">
        UPDATE article
        SET likes = likes + 1
        WHERE articleId = #{articleId}
    </update>
</mapper>

